import sys
import os
from ..repository import repository_find, reference_list
from .show_ref import show_reference, reference_create
from ..objects import object_read, object_find, object_write, GitTag

def cmd_tag(args):
    repository = repository_find()

    if args.name:
        tag_create(repository,
                   args.name,
                   args.object,
                   create_tag_object = args.create_tag_object)
    else:
        references = reference_list(repository)
        show_reference(repository, references["tags"], with_hash = False)

def tag_create(repository, name, email, reference, create_tag_object = False):
    sha = object_find(repository, reference)

    if create_tag_object:
        tag = GitTag()
        tag.kvlm = dict()
        tag.kvlm[b'object'] = sha.encode()
        tag.kvlm[b'type'] = b'commit'
        tag.kvlm[b'tag'] = name.encode()
        tag.kvlm[b'tagger'] = b'Sample <sample.email@example.com>'
        tag.kvlm[None] = b"A tag generated by .. , wich won't let you customize the message"
        tag_sha = object_write(tag, repository)

        reference_create(repository, "tags/" + name, tag_sha)
    else:
        reference_create(repository, "tags/" + name, sha)
